{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","query","filteredMovies","filter","movie","titleTLC","toLowerCase","discriptionTLC","queryTLC","includes","length","map","key","imdbId","App","state","this","htmlFor","type","value","id","placeholder","onChange","e","setState","target","moviesFromServer","Component","ReactDOM","render","document","getElementById"],"mappings":"8vEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAC7BC,EAAiBF,EAAOG,QAAO,SAACC,GACpC,IAAMC,EAAWD,EAAMd,MAAMgB,cACvBC,EAAiBH,EAAMb,YAAYe,cACnCE,EAAWP,EAAMK,cAEvB,OAAOD,EAASI,SAASD,IAAaD,EAAeE,SAASD,MAGhE,OAAON,EAAeQ,QAAU,EAC9B,yBAAKhB,UAAU,UACZQ,EAAeS,KAAI,SAAAP,GAAK,OACvB,kBAAC,EAAD,eAAWQ,IAAKR,EAAMS,QAAYT,QAItC,yBAAKV,UAAU,UAAf,iBAkBJK,EAAWD,aAAe,CACxBE,OAAQ,I,WCpCGc,EAAb,4MACEC,MAAQ,CACNd,MAAO,IAFX,uDAKY,IAAD,OACCA,EAAUe,KAAKD,MAAfd,MAER,OACE,yBAAKP,UAAU,QACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAOuB,QAAQ,eAAevB,UAAU,SAAxC,gBAIA,yBAAKA,UAAU,WACb,2BACEwB,KAAK,OACLC,MAAOH,KAAKD,MAAMd,MAClBmB,GAAG,eACH1B,UAAU,QACV2B,YAAY,mBACZC,SAAU,SAACC,GACT,EAAKC,SAAS,CACZvB,MAAOsB,EAAEE,OAAON,cAQ5B,kBAAC,EAAD,CAAYnB,OAAQ0B,EAAkBzB,MAAOA,KAE/C,yBAAKP,UAAU,WAAf,0BApCR,GAAyBiC,aCAzBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a75e6a5d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies, query }) => {\n  const filteredMovies = movies.filter((movie) => {\n    const titleTLC = movie.title.toLowerCase();\n    const discriptionTLC = movie.description.toLowerCase();\n    const queryTLC = query.toLowerCase();\n\n    return titleTLC.includes(queryTLC) || discriptionTLC.includes(queryTLC);\n  });\n\n  return filteredMovies.length >= 1 ? (\n    <div className=\"movies\">\n      {filteredMovies.map(movie => (\n        <MovieCard key={movie.imdbId} {...movie} />\n      ))}\n    </div>\n  ) : (\n    <div className=\"movies\">\n      Noting found\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  query: PropTypes.string.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList/MoviesList';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    query: '',\n  };\n\n  render() {\n    const { query } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <div className=\"box\">\n            <div className=\"field\">\n              <label htmlFor=\"search-query\" className=\"label\">\n                Search movie\n              </label>\n\n              <div className=\"control\">\n                <input\n                  type=\"text\"\n                  value={this.state.query}\n                  id=\"search-query\"\n                  className=\"input\"\n                  placeholder=\"Type search word\"\n                  onChange={(e) => {\n                    this.setState({\n                      query: e.target.value,\n                    });\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n\n          <MoviesList movies={moviesFromServer} query={query} />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}